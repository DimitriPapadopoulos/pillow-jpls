name: CI

on:
  push:
  schedule:
    - cron: '0 0 1 * *'

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  static_analysis:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Static Analysis
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 --count --max-line-length=120 --statistics pillow_jpls

  build_wheels:
    name: Build wheels on ${{ matrix.os }} (${{ matrix.pyversion }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2022 ]
        pyversion: [ cp310 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: ${{ github.ref_type == 'tag' && '1' || '0' }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install prerequisites
        run: pip install build pytest

      - name: Build project
        run: python -m build -C cmake.args="--preset conan" -C cmake.args="--debug-output"

      - name: run tests
        run: pytest test/

      - name: dump cmake logs
        if: always()
        run: |
          CMAKE_OUTPUT=$(find $HOME -name CMakeOutput.log)
          CMAKE_ERROR=$(find $HOME -name CMakeError.log)
          echo ${CMAKE_OUTPUT}
          echo ${CMAKE_ERROR}
          cat ${CMAKE_OUTPUT} ${CMAKE_ERROR}


  make_sdist:
    name: Make SDist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.ref_type == 'tag' && '1' || '0' }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install build
        run: pip install build

      - name: Build SDist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

